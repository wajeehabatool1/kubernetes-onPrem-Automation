---
- name: Install Kubernetes on Control Planes and Workers
  hosts: controlplanes, workers
  become: true
  gather_facts: no

  tasks:
    - name: Disable Swap
      shell: sudo swapoff -a
    - name: Ensure swap is disabled on reboot
      cron:
        name: Disable swap on reboot
        special_time: reboot
        job: "/sbin/swapoff -a"

    - name: Load Kernel Modules
      shell: |
        set -euxo pipefail
        sudo tee /etc/modules-load.d/k8s.conf <<EOF
        overlay
        br_netfilter
        EOF
        sudo modprobe overlay
        sudo modprobe br_netfilter
      register: kernel_output
      args:
        executable: /bin/bash

    - name: Show Kernel Modules Output
      debug:
        var: kernel_output.stdout_lines

    - name: Configure Sysctl Settings
      shell: |
        set -euxo pipefail
        sudo tee /etc/sysctl.d/k8s.conf <<EOF
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sudo sysctl --system
      register: sysctl_output
      args:
        executable: /bin/bash

    - name: Show Sysctl Output
      debug:
        var: sysctl_output.stdout_lines

    - name: Ensure Keyrings Directory Exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Install CRI-O
      shell: |
        set -euxo pipefail
        sudo apt-get update -y
        sudo apt-get install -y software-properties-common curl apt-transport-https ca-certificates
        curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/stable:/v1.30/deb/ /" | tee /etc/apt/sources.list.d/cri-o.list
        sudo apt-get update -y
        sudo apt-get install -y cri-o
        sudo systemctl daemon-reload
        sudo systemctl enable crio --now
        sudo systemctl start crio
      register: crio_output
      args:
        executable: /bin/bash

    - name: Show CRI-O Output
      debug:
        var: crio_output.stdout_lines

    - name: Install Kubernetes Components
      shell: |
        set -euxo pipefail
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update -y
        sudo apt-get install -y kubelet=1.30.0-1.1 kubectl=1.30.0-1.1 kubeadm=1.30.0-1.1
        sudo apt-mark hold kubelet kubeadm kubectl
      register: kube_output
      args:
        executable: /bin/bash

    - name: Show Kubernetes Install Output
      debug:
        var: kube_output.stdout_lines

    - name: Install jq (for processing JSON)
      apt:
        name: jq
        state: present

    - name: Set Kubelet Node IP
      shell: |
        set -euxo pipefail
        local_ip="$(ip --json addr show eth1 | jq -r '.[0].addr_info[] | select(.family == "inet") | .local')"
        echo "KUBELET_EXTRA_ARGS=--node-ip=$local_ip" | sudo tee /etc/default/kubelet
      register: kubelet_ip_output
      args:
        executable: /bin/bash

    - name: Show Kubelet IP Output
      debug:
        var: kubelet_ip_output.stdout_lines
